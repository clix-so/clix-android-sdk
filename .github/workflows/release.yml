name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be released"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Changelog
        id: read_changelog
        if: ${{ !endsWith(github.event.inputs.version, 'SNAPSHOT') }}
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ github.event.inputs.version }}

      - name: Create Release
        if: steps.read_changelog.outputs.changes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          body: ${{ steps.read_changelog.outputs.changes }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v3

      - name: Build and publish
        run: ./gradlew publish

      - name: Release to Maven Central
        timeout-minutes: 15
        continue-on-error: true
        env:
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.JRELEASER_MAVENCENTRAL_TOKEN }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew jreleaserDeploy
